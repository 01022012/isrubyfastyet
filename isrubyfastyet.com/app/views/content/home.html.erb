<h1>Is Ruby Fast Yet?</h1>

<p>Practical, comparative benchmarks of Ruby implementations. Thanks to <%= link_to "RVM", "https://rvm.io/" %> for Ruby setup and compiling. <%= link_to "Github", "https://github.com/brianhempel/isrubyfastyet" %></p>

<section id="graphs">
  <%= render 'benchmarks/graph', :benchmark => 'rails_requests_per_second_steady_state', :default_time_range => '1m', :explanation => "More is better. Single-threaded; warm JIT (warmup requires around 50,000 requests for JRuby and RBX)." %>
  <%= render 'benchmarks/graph', :benchmark => 'rails_requests_per_second',              :default_time_range => '1m', :explanation => "More is better. Single-threaded; cold start (3 seconds of warmup, 15 seconds of testing)." %>
  <%= render 'benchmarks/graph', :benchmark => 'rails_startup_time',                     :default_time_range => '1m', :explanation => "Less is better. Note that JRuby does not use <a href=\"https://github.com/jruby/jruby/wiki/Improving-startup-time#try-using-theine-for-rails-apps\">Drip, Nailgun, or Theine</a> for this benchmark." %>
  <%= render 'benchmarks/graph', :benchmark => 'rails_memory_usage',                     :default_time_range => '1m', :explanation => "Less is better, if you have reason to care about memory usage." %>
</section>

<section id="so-is-ruby-fast-yet">
  <h3>So, Is Ruby Fast Yet?</h3>
  <p>
    I like to think that "fast" is, somewhat arbitrarily, either five times or ten times faster than Ruby 1.8.7. Both 5x and 10x better than 1.8.7 are significant milestones, but neither has been reached. So, no. Ruby is not fast yet.
  </p>
  <p>
    Ruby is, however, getting faster with each release. These benchmarks give a good indication of how much faster.
  </p>
</section>

<section id="about">
  <h3>About the Benchmarks</h3>
  <p>
    This is intended as a Ruby benchmark rather than a Rails one; <%= link_to "Rails", 'http://rubyonrails.org/' %> just happens to be the best thing out there to benchmark. Rails presents the greatest challenge to Ruby implementations.
  </p>
  <p>
    As a Ruby benchmark, the Rails version is locked to 3.1.3 and the server is WEBrick.
  </p>
  <p>
    I would love to compare Ruby to other dynamic languages. However, I don't know of any sufficiently complex, real-world applications that are also cross-language. If you discover any, please <%= link_to "let me know", 'https://github.com/brianhempel/isrubyfastyet/issues' %>.
  </p>
</section>

<section id="hardware">
  <h3>Hardware</h3>
  <p>
    Mid-2007 MacBook Pro<br>
    2.2GHz Core 2 Duo<br>
    6GB 667MHz DDR2 SDRAM<br>
    WD Scorpio Black 7200RPM 320GB Hard Drive<br>
    Mac OS X 10.6<br>
    When running the benchmark, the computer fans are spun up to maximum speed courtesy of <%= link_to "smcFanControl", "http://www.eidac.de/?cat=40" %>. JRuby, in particular, runs hot. However, I have good reason to believe that the fans, cool-down pauses, and short measurement times sufficiently prevent the processor from throttling during benchmarking. (During the long JIT warmup, the processor throttles down a little; however, after a short break once JRuby reaches study state, the processor does not throttle when load is reapplied.)
  </p>
</section>

<section id="debugging">
  <h3>Debugging</h3>
  <p>
  	Is your favorite Ruby implementation not showing up? Check the <%= link_to "latest nightly log", 'latest.log' %> to learn why.
  </p>
</section>

<section id="updates">
  <h3>Updates</h3>
  <p>
    <ol>
      <li>
        <span class="date">2014-09-21</span>
        (RVM 1.8.7 actually builds 1.8.7-head for security reasons.)
      </li>
      <li>
        <span class="date">2014-01-02</span>
        Java updated from 1.6.0_51-b11-457 to 1.7.0_45.
      </li>
      <li>
        <span class="date">2013-05-24</span>
        Rails Requests Per Second Steady State benchmark added to show JIT performance.
      </li>
      <li>
        <span class="date">2012-01-12</span>
        First results.
      </li>
    </ol>
  </p>
</section>
