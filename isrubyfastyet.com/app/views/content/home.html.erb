<h1>Is Ruby Fast Yet?</h1>

<p>Practical, comparative benchmarks of Ruby implementations. Thanks to <%= link_to "RVM", "https://rvm.io/" %> for Ruby setup and compiling. <%= link_to "Github", "https://github.com/brianhempel/isrubyfastyet" %></p>

<section id="graphs">
  <%= render 'benchmarks/graph', :benchmark => 'rails_requests_per_second_steady_state', :default_time_range => '1m', :explanation => "More is better. Single-threaded; warm JIT (warmup requires around 50,000 requests for JRuby and RBX)." %>
  <%= render 'benchmarks/graph', :benchmark => 'rails_requests_per_second',              :default_time_range => '1m', :explanation => "More is better. Single-threaded; cold start (3 seconds of warmup, 15 seconds of testing)." %>
  <%= render 'benchmarks/graph', :benchmark => 'rails_startup_time',                     :default_time_range => '1m', :explanation => "Less is better. Note that JRuby does not use <a href=\"https://github.com/jruby/jruby/wiki/Improving-startup-time#try-using-theine-for-rails-apps\">Drip, Nailgun, or Theine</a> for this benchmark." %>
  <%= render 'benchmarks/graph', :benchmark => 'rails_memory_usage',                     :default_time_range => '1m', :explanation => "Less is better, if you have reason to care about memory usage." %>
</section>

<section id="so-is-ruby-fast-yet">
  <h3>So, Is Ruby Fast Yet?</h3>
  <p>
    I like to think that "fast" is, somewhat arbitrarily, either five times or ten times faster than Ruby 1.8.7. Both 5x and 10x better than 1.8.7 are significant milestones, but neither has been reached. So, no. Ruby is not fast yet.
  </p>
  <p>
    Ruby is, however, getting faster with each release. These benchmarks give a good indication of how much faster.
  </p>
</section>

<section id="about">
  <h3>About the Benchmarks</h3>
  <p>
    This is intended as a Ruby benchmark rather than a Rails one; <%= link_to "Rails", 'http://rubyonrails.org/' %> just happens to be the best thing out there to benchmark. Rails presents the greatest challenge to Ruby implementations.
  </p>
  <p>
    As a Ruby benchmark, the Rails version is locked to 3.1.3 and the server is WEBrick.
  </p>
  <p>
    I would love to compare Ruby to other dynamic languages. However, I don't know of any sufficiently complex, real-world applications that are also cross-language. If you discover any, please <%= link_to "let me know", 'https://github.com/brianhempel/isrubyfastyet/issues' %>.
  </p>
</section>

<section id="hardware">
  <h3>Hardware</h3>
  <p>
    Mid-2007 MacBook Pro<br>
    2.2GHz Core 2 Duo<br>
    6GB 667MHz DDR2 SDRAM<br>
    WD Scorpio Black 7200RPM 320GB Hard Drive<br>
    Ubuntu Server 14.04<br>
    Fans preemptively sped up with macfanctld.
  </p>
</section>

<section id="debugging">
  <h3>Debugging</h3>
  <p>
  	Is your favorite Ruby implementation not showing up? Check the <%= link_to "latest nightly log", 'latest.log' %> to learn why.
  </p>
</section>

<section id="updates">
  <h3>Updates</h3>
  <p>
    <ol>
      <li>
        <span class="date">2014-12-26</span>
        OS Switched to Ubuntu Server 14.04. JRuby is now run in OpenJDK 7. (The upgrade was required becasuse newer rubies no longer compiled on Mac OS X 10.6, and upgrading to Yosemite introduced a hard-to-diagnose performance regression that may have been in the network stack. Ubuntu at least runs the refernence Ruby (1.8.7) at the same speed as before. Additionally, many people use Ubuntu 14.04 in production.)
      <li>
        <span class="date">2014-09-21</span>
        Older head rubies are no longer benchmarked: 1.9.2-head, 1.9.3-head, and 2.0.0-head. Note that RVM 1.8.7 actually builds 1.8.7-head for security reasons.
        Ruby uses a more semantic versioning scheme as of 2.1.0, so 2.1.0 and 2.1.0-head have been replaced by 2.1 and 2.1-head.
      </li>
      <li>
        <span class="date">2014-01-02</span>
        Java updated from 1.6.0_51-b11-457 to 1.7.0_45.
      </li>
      <li>
        <span class="date">2013-05-24</span>
        Rails Requests Per Second Steady State benchmark added to show JIT performance.
      </li>
      <li>
        <span class="date">2012-01-12</span>
        First results.
      </li>
    </ol>
  </p>
</section>
